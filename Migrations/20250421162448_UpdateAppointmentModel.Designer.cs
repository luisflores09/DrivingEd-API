// <auto-generated />
using System;
using DrivingEd_BackEnd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DrivingEd_BackEnd.Migrations
{
    [DbContext(typeof(DrivingEdDbContext))]
    [Migration("20250421162448_UpdateAppointmentModel")]
    partial class UpdateAppointmentModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DrivingEd_BackEnd.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.HasIndex("StudentId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("DrivingEd_BackEnd.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Availability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Expertise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEnrolled")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Privileges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleDetails")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin1@example.com",
                            FirstName = "Admin",
                            IsDeleted = false,
                            LastName = "One",
                            Password = "Admin@123",
                            PhoneNumber = "1234567890",
                            ProfilePictureUrl = "https://cdn-icons-png.flaticon.com/512/149/149071.png",
                            Role = 0,
                            UserName = "admin1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin2@example.com",
                            FirstName = "Admin",
                            IsDeleted = false,
                            LastName = "Two",
                            Password = "Admin@123",
                            PhoneNumber = "2234567890",
                            ProfilePictureUrl = "https://cdn-icons-png.flaticon.com/512/149/149071.png",
                            Role = 0,
                            UserName = "admin2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin3@example.com",
                            FirstName = "Admin",
                            IsDeleted = false,
                            LastName = "Three",
                            Password = "Admin@123",
                            PhoneNumber = "3234567890",
                            ProfilePictureUrl = "https://cdn-icons-png.flaticon.com/512/149/149071.png",
                            Role = 0,
                            UserName = "admin3"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin4@example.com",
                            FirstName = "Admin",
                            IsDeleted = false,
                            LastName = "Four",
                            Password = "Admin@123",
                            PhoneNumber = "4234567890",
                            ProfilePictureUrl = "https://cdn-icons-png.flaticon.com/512/149/149071.png",
                            Role = 0,
                            UserName = "admin4"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "instructor1@example.com",
                            FirstName = "Instructor",
                            IsDeleted = false,
                            LastName = "One",
                            LicenseNumber = "LIC12345",
                            Password = "Instructor@123",
                            PhoneNumber = "0987654321",
                            ProfilePictureUrl = "https://cdn-icons-png.flaticon.com/512/149/149071.png",
                            Role = 1,
                            UserName = "instructor1",
                            VehicleDetails = "Toyota Corolla"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "instructor2@example.com",
                            FirstName = "Instructor",
                            IsDeleted = false,
                            LastName = "Two",
                            LicenseNumber = "LIC12346",
                            Password = "Instructor@123",
                            PhoneNumber = "1987654321",
                            ProfilePictureUrl = "https://cdn-icons-png.flaticon.com/512/149/149071.png",
                            Role = 1,
                            UserName = "instructor2",
                            VehicleDetails = "Honda Civic"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "instructor3@example.com",
                            FirstName = "Instructor",
                            IsDeleted = false,
                            LastName = "Three",
                            LicenseNumber = "LIC12347",
                            Password = "Instructor@123",
                            PhoneNumber = "2987654321",
                            ProfilePictureUrl = "https://cdn-icons-png.flaticon.com/512/149/149071.png",
                            Role = 1,
                            UserName = "instructor3",
                            VehicleDetails = "Ford Focus"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "instructor4@example.com",
                            FirstName = "Instructor",
                            IsDeleted = false,
                            LastName = "Four",
                            LicenseNumber = "LIC12348",
                            Password = "Instructor@123",
                            PhoneNumber = "3987654321",
                            ProfilePictureUrl = "https://cdn-icons-png.flaticon.com/512/149/149071.png",
                            Role = 1,
                            UserName = "instructor4",
                            VehicleDetails = "Chevrolet Malibu"
                        },
                        new
                        {
                            Id = 3,
                            Address = "123 Main St",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "student1@example.com",
                            FirstName = "Student",
                            IsDeleted = false,
                            LastName = "One",
                            Password = "Student@123",
                            PhoneNumber = "1122334455",
                            ProfilePictureUrl = "https://cdn-icons-png.flaticon.com/512/149/149071.png",
                            Role = 2,
                            UserName = "student1"
                        },
                        new
                        {
                            Id = 10,
                            Address = "456 Elm St",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfBirth = new DateTime(2001, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "student2@example.com",
                            FirstName = "Student",
                            IsDeleted = false,
                            LastName = "Two",
                            Password = "Student@123",
                            PhoneNumber = "2122334455",
                            ProfilePictureUrl = "https://cdn-icons-png.flaticon.com/512/149/149071.png",
                            Role = 2,
                            UserName = "student2"
                        },
                        new
                        {
                            Id = 11,
                            Address = "789 Pine St",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfBirth = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "student3@example.com",
                            FirstName = "Student",
                            IsDeleted = false,
                            LastName = "Three",
                            Password = "Student@123",
                            PhoneNumber = "3122334455",
                            ProfilePictureUrl = "https://cdn-icons-png.flaticon.com/512/149/149071.png",
                            Role = 2,
                            UserName = "student3"
                        },
                        new
                        {
                            Id = 12,
                            Address = "101 Maple St",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfBirth = new DateTime(2003, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "student4@example.com",
                            FirstName = "Student",
                            IsDeleted = false,
                            LastName = "Four",
                            Password = "Student@123",
                            PhoneNumber = "4122334455",
                            ProfilePictureUrl = "https://cdn-icons-png.flaticon.com/512/149/149071.png",
                            Role = 2,
                            UserName = "student4"
                        });
                });

            modelBuilder.Entity("DrivingEd_BackEnd.Models.Appointment", b =>
                {
                    b.HasOne("DrivingEd_BackEnd.Models.User", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DrivingEd_BackEnd.Models.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
